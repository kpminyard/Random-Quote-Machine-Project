{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["data","quote","author","App","props","state","number","Math","floor","random","newQuote","newAuthor","this","setState","id","onClick","bind","href","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAe,I,YCITA,EAAO,CAAC,CAACC,MAAO,wFAAyFC,OAAQ,kBAAmB,CAACD,MAAO,2DAA4DC,OAAQ,gBAAiB,CAACD,MAAO,sEAAuEC,OAAQ,iBAAkB,CAACD,MAAO,wFAAyFC,OAAQ,iBAAkB,CAACD,MAAO,iCAAkCC,OAAQ,kBAwC9eC,E,kDArCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXJ,MAAO,GACPC,OAAQ,IAJM,E,4CAQlB,WACE,IAAII,EAASC,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBC,EAAWV,EAAKM,GAAQL,MACxBU,EAAYX,EAAKM,GAAQJ,OAC7BU,KAAKC,SAAS,CAACZ,MAAOS,EAAUR,OAAQS,M,+BAG1C,WACEC,KAAKF,a,oBAGP,WACE,OACA,sBAAKI,GAAG,YAAR,UACG,mBAAGA,GAAG,OAAN,SACGF,KAAKP,MAAMJ,QAEb,oBAAGa,GAAG,SAAN,cACIF,KAAKP,MAAMH,UAEf,sBAAKY,GAAG,UAAR,UACA,wBAAQC,QAASH,KAAKF,SAASM,KAAKJ,MAAOE,GAAG,YAA9C,uBACA,mBAAGG,KAAK,2BAA2BH,GAAG,cAAtC,SAAoD,mBAAGI,UAAU,8B,GA/BvDC,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1613b4cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nconst data = [{quote: '\"A small stone may only make a small ripple at first, but someday it will be a wave.\"', author: \"Wiegraf Folles\"}, {quote: '\"The best ways, don\\'t always lead to the best results.\"', author: \"Delita Hyral\"}, {quote: '\"Names don\\'t matter. What\\'s important is how you live your life.\"', author: \"Ramza Beoulve\"}, {quote: '\"But we also know that what we see with our eyes alone isn\\'t necessarily the truth.\"', author: \"Alazlam Durai\"}, {quote: '\"Ignorance itself is a crime!\"', author: \"Miluda Folles\"}];\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote: \"\",\n      author: \"\"\n    };\n  }\n  \n  newQuote() {\n    let number = Math.floor(Math.random() * 5);\n    let newQuote = data[number].quote;\n    let newAuthor = data[number].author;\n    this.setState({quote: newQuote, author: newAuthor});\n  }\n  \n  componentDidMount() {\n    this.newQuote();\n  }\n  \n  render() {\n    return (\n    <div id=\"quote-box\">\n       <p id=\"text\">\n         {this.state.quote}\n        </p>\n        <p id=\"author\">\n          -{this.state.author}\n        </p>\n        <div id=\"buttons\">\n        <button onClick={this.newQuote.bind(this)} id=\"new-quote\">New Quote</button>\n        <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\"><i className=\"fa fa-twitter\"></i></a>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}